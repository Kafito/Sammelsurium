#!/bin/bash
# startattachable, a script to start a process as a daemon and provide the opportunity to attach to the console of this program

main() {
WHAT="$1"; shift
TOKEN="$1"; shift

if [[ -z "$TOKEN" ||  -z "$WHAT" ]]; then
  echo "usage"
  exit
fi

FIFO_NAME="/dev/shm/$TOKEN.ctl"
LOG_FILE="/dev/shm/$TOKEN.log"

# setup fifo
mkfifo "${FIFO_NAME}" #TODO: set access rights to current user write only

#initial setup file handles
exec {daemonlogfile}>"$LOG_FILE"
exec {daemon_comm}<>"${FIFO_NAME}"

# evaluate command
case "$WHAT" in 
  start)
    start $@
  ;;
  connect)
    connect
  ;;
esac
}

# prepare cleanup
function cleanup {
  exec {daemon_comm}>&-
  rm  -v "$LOG_FILE" "$FIFO_NAME"
}

function start {
(
echo $FIFO_NAME $LOG_FILE
COMMAND=$1; shift
if [ -z "$COMMAND" ]; then
  echo "usage"
fi
#disable SIGTERM and SIGINT for the daemon process:
trap "" SIGTERM # avoid kills by systemctl
trap "" SIGINT # avoid kills when the interactive console is aborted

#start the daemon process
$COMMAND $@ <&${daemon_comm} >&${daemonlogfile} 2>&${daemonlogfile} &

# Now get the PID of daemon, issue stop, wait for it synchronously within the signal handler. and clean up afterwards -- 
PID=$!
trap "echo stop >${FIFO_NAME}; wait $PID" SIGTERM #TODO: make stop command configurable
#wait and clean up afterwards
wait $PID 
cleanup
) & 
}

function connect {
(
tail -f "$LOG_FILE" &
while IFS= read -r -n 1 char; do
  if [[ ! -p "$FIFO_NAME" ]]; then echo "abort"; break; fi
  echo -n "+$char" >"${FIFO_NAME}"
done
)
}

main $@

#function connect {
#tail -f "$LOG_FILE" &
#start the interactive shell emulation
#TODO: issue tail-f background, if possible, to create some kind of a interative shell
#while read line; do
#  if [ -p "${FIFO_NAME}" ]; then
#    echo "cmd: $line"
#  else
#    echo "named pipe does not exist anymore, aborting server frontend" >&2
#    break
#  fi
#done >"${FIFO_NAME}"
#}


#kafi@v22014082319219779 startattachable]$ while true; do IFS= read -r -n 1 line; echo "$line"; done <&${testfifo} &
#[1] 1692
#[kafi@v22014082319219779 startattachable]$ while IFS= read -r -n1 char; do echo -n "$char" > test; done

