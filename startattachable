#!/bin/bash
# startattachable, a script to start a process as a daemon and provide the opportunity to attach to the console of this program

WHAT="$1"; shift
TOKEN="$1"; shift

FIFO_NAME="/dev/shm/$TOKEN.ctl"
LOG_FILE="/dev/shm/$TOKEN.log"

COMMAND=$1; shift

# setup fifo
mkfifo "${FIFO_NAME}" #TODO: set access rights to current user write only

#initial setup file handles
exec {daemonlogfile}>"$LOG_FILE"
exec {daemon_comm}<>"${FIFO_NAME}"

# prepare cleanup
function cleanup {
  exec {daemon_comm}>&-
  rm  "$LOGFILE" "$FIFO_NAME"
}

function start {
(
#disable SIGTERM and SIGINT for the daemon process:
trap "" SIGTERM # avoid kills by systemctl
trap "" SIGINT # avoid kills when the interactive console is aborted

#start the daemon process
$COMMAND $@  <&${daemon_comm} >&${shmlog} 2>&${shmlog} &

# Now get the PID of daemon, issue stop, wait for it synchronously within the signal handler. and clean up afterwards -- 
PID=$!
trap "echo stop >${FIFO_NAME}; wait $PID" SIGTERM #TODO: make stop command configurable
#wait and clean up afterwards
wait $PID 
cleanup
) & 
}

function connect {
tail -f "$LOG_FILE"
#start the interactive shell emulation
#TODO: issue tail-f background, if possible, to create some kind of a interative shell
while read line; do
  if [ -p "${FIFO_NAME}" ]; then
    echo "$line"
  else
    echo "named pipe does not exist anymore, aborting server frontend" >&${stderr}
    break
  fi
done >"${FIFO_NAME}"
}

# evaluate command

case "$WHAT" in 
  start)
    start
  connect)
    connect
